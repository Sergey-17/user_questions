#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä
# –°–µ—Ä–≤–µ—Ä: 95.81.114.223
# –ê–≤—Ç–æ—Ä: Sergey

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP="95.81.114.223"
SERVER_USER="root"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
PROJECT_DIR="/opt/user_questions"
DOCKER_COMPOSE_FILE="docker-compose.prod.yml"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
log() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSH –∫–ª—é—á–∞
check_ssh_connection() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º ${SERVER_IP}..."
    
    if ! ssh -o ConnectTimeout=10 -o BatchMode=yes ${SERVER_USER}@${SERVER_IP} "echo 'SSH connection successful'" &> /dev/null; then
        error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É ${SERVER_IP}"
        error "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:"
        error "1. SSH –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        error "2. –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
        error "3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${SERVER_USER} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        exit 1
    fi
    
    success "SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
check_docker_on_server() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    if ! ssh ${SERVER_USER}@${SERVER_IP} "command -v docker" &> /dev/null; then
        error "Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        log "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
    
    if ! ssh ${SERVER_USER}@${SERVER_IP} "command -v docker-compose" &> /dev/null; then
        error "docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        log "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    fi
    
    success "Docker –∏ docker-compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
setup_project_directory() {
    log "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "mkdir -p ${PROJECT_DIR}"
    success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è ${PROJECT_DIR} —Å–æ–∑–¥–∞–Ω–∞"
}

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
copy_files_to_server() {
    log "–ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º docker-compose.prod.yml
    if [ -f "docker-compose.prod.yml" ]; then
        scp docker-compose.prod.yml ${SERVER_USER}@${SERVER_IP}:${PROJECT_DIR}/
        success "docker-compose.prod.yml —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    else
        error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
        error "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ deploy.sh –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ñ–∞–π–ª–æ–≤"
        exit 1
    fi
    
    # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if [ -f ".env" ]; then
        scp .env ${SERVER_USER}@${SERVER_IP}:${PROJECT_DIR}/
        success ".env —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    else
        warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—Ä—É—á–Ω—É—é"
    fi
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
stop_old_containers() {
    log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} down" || true
    success "–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
update_images_on_server() {
    log "–û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "docker pull sergey17/backend:latest"
    ssh ${SERVER_USER}@${SERVER_IP} "docker pull sergey17/frontend:latest"
    
    success "–û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
start_application() {
    log "–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh ${SERVER_USER}@${SERVER_IP} "cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} up -d"
    
    if [ $? -eq 0 ]; then
        success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    else
        error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
check_application_status() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    sleep 10  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    ssh ${SERVER_USER}@${SERVER_IP} "cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} ps"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    if curl -s -f http://${SERVER_IP}:8000/health &> /dev/null; then
        success "Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:8000"
    else
        warning "Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:8000"
    fi
    
    if curl -s -f http://${SERVER_IP}:5173 &> /dev/null; then
        success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:5173"
    else
        warning "Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:5173"
    fi
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
show_logs() {
    log "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫)..."
    ssh ${SERVER_USER}@${SERVER_IP} "cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} logs --tail=20"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
main() {
    log "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä ${SERVER_IP}"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    check_ssh_connection
    check_docker_on_server
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    setup_project_directory
    copy_files_to_server
    
    # –î–µ–ø–ª–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    stop_old_containers
    update_images_on_server
    start_application
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    check_application_status
    show_logs
    
    success "üéâ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    log ""
    log "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    log "  - Backend: http://${SERVER_IP}:8000"
    log "  - Frontend: http://${SERVER_IP}:5173"
    log ""
    log "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    log "  ssh ${SERVER_USER}@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} logs -f'"
    log ""
    log "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    log "  ssh ${SERVER_USER}@${SERVER_IP} 'cd ${PROJECT_DIR} && docker-compose -f ${DOCKER_COMPOSE_FILE} down'"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
main "$@"
