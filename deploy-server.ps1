# –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä (PowerShell)
# –°–µ—Ä–≤–µ—Ä: 95.81.114.223
# –ê–≤—Ç–æ—Ä: Sergey

param(
    [string]$ServerUser = "root",
    [switch]$SkipCopy,
    [switch]$SkipStop
)

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
$SERVER_IP = "95.81.114.223"
$PROJECT_DIR = "/opt/user_questions"
$DOCKER_COMPOSE_FILE = "docker-compose.prod.yml"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
function Write-Info {
    param([string]$Message)
    Write-Host "[INFO] $Message" -ForegroundColor Blue
}

function Write-Success {
    param([string]$Message)
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-Warning {
    param([string]$Message)
    Write-Host "[WARNING] $Message" -ForegroundColor Yellow
}

function Write-Error {
    param([string]$Message)
    Write-Host "[ERROR] $Message" -ForegroundColor Red
}

Write-Info "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ SSH
function Test-SSHConnection {
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º $SERVER_IP..."
    
    try {
        ssh -o ConnectTimeout=10 -o BatchMode=yes "${ServerUser}@${SERVER_IP}" "echo 'SSH connection successful'" 2>$null | Out-Null
        if ($LASTEXITCODE -eq 0) {
            Write-Success "SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
        } else {
            throw "SSH connection failed"
        }
    } catch {
        Write-Error "–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É $SERVER_IP"
        Write-Error "–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:"
        Write-Error "1. SSH –∫–ª—é—á –Ω–∞—Å—Ç—Ä–æ–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ"
        Write-Error "2. –°–µ—Ä–≤–µ—Ä –¥–æ—Å—Ç—É–ø–µ–Ω"
        Write-Error "3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å $ServerUser —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
function Test-DockerOnServer {
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    try {
        ssh "${ServerUser}@${SERVER_IP}" "command -v docker" 2>$null | Out-Null
        if ($LASTEXITCODE -ne 0) {
            throw "Docker not found"
        }
        
        ssh "${ServerUser}@${SERVER_IP}" "command -v docker-compose" 2>$null | Out-Null
        if ($LASTEXITCODE -ne 0) {
            throw "docker-compose not found"
        }
        
        Write-Success "Docker –∏ docker-compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    } catch {
        Write-Error "Docker –∏–ª–∏ docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
        Write-Info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ docker-compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞"
        exit 1
    }
}

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
function New-ProjectDirectory {
    Write-Info "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh "${ServerUser}@${SERVER_IP}" "mkdir -p $PROJECT_DIR"
    Write-Success "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $PROJECT_DIR —Å–æ–∑–¥–∞–Ω–∞"
}

# –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
function Copy-FilesToServer {
    Write-Info "–ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    
    # –ö–æ–ø–∏—Ä—É–µ–º docker-compose.prod.yml
    if (Test-Path "docker-compose.prod.yml") {
        scp docker-compose.prod.yml "${ServerUser}@${SERVER_IP}:${PROJECT_DIR}/"
        Write-Success "docker-compose.prod.yml —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    } else {
        Write-Error "–§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω"
        Write-Error "–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ deploy.ps1 –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω —Ñ–∞–π–ª–æ–≤"
        exit 1
    }
    
    # –ö–æ–ø–∏—Ä—É–µ–º .env —Ñ–∞–π–ª (–µ—Å–ª–∏ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
    if (Test-Path ".env") {
        scp .env "${ServerUser}@${SERVER_IP}:${PROJECT_DIR}/"
        Write-Success ".env —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    } else {
        Write-Warning ".env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—Ä—É—á–Ω—É—é"
    }
}

# –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
function Stop-OldContainers {
    Write-Info "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    
    ssh "${ServerUser}@${SERVER_IP}" "cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE down" 2>$null
    Write-Success "–°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
function Update-ImagesOnServer {
    Write-Info "–û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh "${ServerUser}@${SERVER_IP}" "docker pull sergey17/backend:latest"
    ssh "${ServerUser}@${SERVER_IP}" "docker pull sergey17/frontend:latest"
    
    Write-Success "–û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
function Start-Application {
    Write-Info "–ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    
    ssh "${ServerUser}@${SERVER_IP}" "cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE up -d"
    
    if ($LASTEXITCODE -eq 0) {
        Write-Success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    } else {
        Write-Error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
        exit 1
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
function Test-ApplicationStatus {
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    Start-Sleep -Seconds 10  # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    ssh "${ServerUser}@${SERVER_IP}" "cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE ps"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
    Write-Info "–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤..."
    
    try {
        Invoke-WebRequest -Uri "http://${SERVER_IP}:8000/health" -TimeoutSec 10 -ErrorAction Stop | Out-Null
        Write-Success "Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:8000"
    } catch {
        Write-Warning "Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:8000"
    }
    
    try {
        Invoke-WebRequest -Uri "http://${SERVER_IP}:5173" -TimeoutSec 10 -ErrorAction Stop | Out-Null
        Write-Success "Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:5173"
    } catch {
        Write-Warning "Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://${SERVER_IP}:5173"
    }
}

# –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
function Show-Logs {
    Write-Info "–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫)..."
    ssh "${ServerUser}@${SERVER_IP}" "cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE logs --tail=20"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
function Start-Deploy {
    Write-Info "–ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä $SERVER_IP"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    Test-SSHConnection
    Test-DockerOnServer
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–æ–µ–∫—Ç
    New-ProjectDirectory
    
    if (-not $SkipCopy) {
        Copy-FilesToServer
    }
    
    # –î–µ–ø–ª–æ–∏–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    if (-not $SkipStop) {
        Stop-OldContainers
    }
    Update-ImagesOnServer
    Start-Application
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    Test-ApplicationStatus
    Show-Logs
    
    Write-Success "üéâ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
    Write-Info ""
    Write-Info "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:"
    Write-Info "  - Backend: http://${SERVER_IP}:8000"
    Write-Info "  - Frontend: http://${SERVER_IP}:5173"
    Write-Info ""
    Write-Info "–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    Write-Info "  ssh ${ServerUser}@${SERVER_IP} 'cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE logs -f'"
    Write-Info ""
    Write-Info "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
    Write-Info "  ssh ${ServerUser}@${SERVER_IP} 'cd $PROJECT_DIR && docker-compose -f $DOCKER_COMPOSE_FILE down'"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º –¥–µ–ø–ª–æ–π
Start-Deploy
