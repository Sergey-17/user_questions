Дополни существующий FastAPI backend новой логикой. 

Задача: реализовать endpoint /analyze-site, который принимает POST-запрос с параметром url (ссылка на сайт для анализа).

Шаги обработки:

Скачать HTML-код сайта по предоставленному URL.
Очистить HTML от тегов, оставив только текст. Используй для этого библиотеку BeautifulSoup или аналог.
Сформировать системный промпт для LLM: Ты пользователь сайта. Вот текст сайта: [очищенный текст]. 
В ответе в формате JSON выдай список из 5 вопрсов, которые возникли после посещения сайта. 
Использовать метод chat_json для получения результата.
Вернуть результат как ответ API.

Требования к коду:

Создай новую ручку в арр/routers/llm.py:
@router.post("/analyze-site")
async def analyze_site(request: AnalyzeRequest) -> dict:
где AnalyzeRequest - Pydantic-модель с полем url: str.

Логику вынеси в отдельный сервисный модуль app/services/analyzer.py, чтобы код ручки
был чистым.
Обработай ошибки: если сайт не скачан или парсинг не удался - возвращай НТТР 400.
Возвращаемый JSON должен включать:
исходный url,
список из 5 вопросов.
