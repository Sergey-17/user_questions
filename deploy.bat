@echo off
chcp 65001 >nul
REM –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ DockerHub –∏ –ª–æ–∫–∞–ª—å–Ω–æ (Windows Batch)
REM –ê–≤—Ç–æ—Ä: Sergey

setlocal enabledelayedexpansion

REM –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
set SKIP_BUILD=0
set SKIP_PUSH=0
set SKIP_LOCAL=0

REM –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
:parse_args
if "%1"=="-SkipBuild" (
    set SKIP_BUILD=1
    shift
    goto parse_args
)
if "%1"=="-SkipPush" (
    set SKIP_PUSH=1
    shift
    goto parse_args
)
if "%1"=="-SkipLocal" (
    set SKIP_LOCAL=1
    shift
    goto parse_args
)
if "%1"=="" goto start_deploy
shift
goto parse_args

:start_deploy
echo.
echo [INFO] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –ø—Ä–æ–µ–∫—Ç–∞...
echo.

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker
docker --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    exit /b 1
)
echo [SUCCESS] Docker –Ω–∞–π–¥–µ–Ω

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ docker-compose
docker-compose --version >nul 2>&1
if %errorlevel% neq 0 (
    echo [ERROR] docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.
    exit /b 1
)
echo [SUCCESS] docker-compose –Ω–∞–π–¥–µ–Ω

REM –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑—ã
if %SKIP_BUILD%==0 (
    echo [INFO] –°–æ–±–∏—Ä–∞–µ–º Docker –æ–±—Ä–∞–∑—ã...
    
    echo [INFO] –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ –¥–ª—è backend...
    docker build -f Backend-Dockerfile -t sergey17/backend:latest .
    if %errorlevel% neq 0 (
        echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞ sergey17/backend:latest
        exit /b 1
    )
    echo [SUCCESS] –û–±—Ä–∞–∑ sergey17/backend:latest —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω
    
    echo [INFO] –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ –¥–ª—è frontend...
    docker build -f Frontend-Dockerfile -t sergey17/frontend:latest .
    if %errorlevel% neq 0 (
        echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ –æ–±—Ä–∞–∑–∞ sergey17/frontend:latest
        exit /b 1
    )
    echo [SUCCESS] –û–±—Ä–∞–∑ sergey17/frontend:latest —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω
)

REM –ü—É—à–∏–º –æ–±—Ä–∞–∑—ã –≤ Docker Hub
if %SKIP_PUSH%==0 (
    echo [INFO] –ü—É—à–∏–º –æ–±—Ä–∞–∑—ã –≤ Docker Hub...
    
    echo [INFO] –ü—É—à–∏–º –æ–±—Ä–∞–∑ sergey17/backend:latest –≤ Docker Hub...
    docker push sergey17/backend:latest
    if %errorlevel% neq 0 (
        echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ –æ–±—Ä–∞–∑–∞ sergey17/backend:latest
        exit /b 1
    )
    echo [SUCCESS] –û–±—Ä–∞–∑ sergey17/backend:latest —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω –≤ Docker Hub
    
    echo [INFO] –ü—É—à–∏–º –æ–±—Ä–∞–∑ sergey17/frontend:latest –≤ Docker Hub...
    docker push sergey17/frontend:latest
    if %errorlevel% neq 0 (
        echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—É—à–µ –æ–±—Ä–∞–∑–∞ sergey17/frontend:latest
        exit /b 1
    )
    echo [SUCCESS] –û–±—Ä–∞–∑ sergey17/frontend:latest —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—à–µ–Ω –≤ Docker Hub
)


echo.
echo [SUCCESS] üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!
echo [INFO] –û–±—Ä–∞–∑—ã –¥–æ—Å—Ç—É–ø–Ω—ã –≤ Docker Hub:
echo [INFO]   - sergey17/backend:latest
echo [INFO]   - sergey17/frontend:latest
echo.
echo [INFO] –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ deploy-server.bat
echo.

endlocal