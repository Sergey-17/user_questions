@echo off
chcp 65001 >nul
REM –°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–ø–ª–æ—è –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Å –ø–∞—Ä–æ–ª–µ–º (Windows Batch)
REM –°–µ—Ä–≤–µ—Ä: 95.81.114.223
REM –ê–≤—Ç–æ—Ä: Sergey

setlocal enabledelayedexpansion

REM –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
set SERVER_IP=95.81.114.223
set SERVER_USER=root
set PROJECT_DIR=/opt/user_questions
set DOCKER_COMPOSE_FILE=docker-compose.prod.yml

echo.
echo [INFO] üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ —É–¥–∞–ª—ë–Ω–Ω—ã–π —Å–µ—Ä–≤–µ—Ä...
echo [INFO] –°–µ—Ä–≤–µ—Ä: %SERVER_IP%
echo [INFO] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: %SERVER_USER%
echo.

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤
if not exist "docker-compose.prod.yml" (
    echo [ERROR] –§–∞–π–ª docker-compose.prod.yml –Ω–µ –Ω–∞–π–¥–µ–Ω
    echo [INFO] –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: deploy.bat -SkipBuild -SkipPush -SkipLocal
    exit /b 1
)

echo [INFO] –§–∞–π–ª—ã –≥–æ—Ç–æ–≤—ã –∫ –¥–µ–ø–ª–æ—é
echo.

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º %SERVER_IP%...
echo [INFO] –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è %SERVER_USER%:
ssh -o ConnectTimeout=10 %SERVER_USER%@%SERVER_IP% "echo 'SSH connection successful'"
if %errorlevel% neq 0 (
    echo [ERROR] –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É %SERVER_IP%
    echo [ERROR] –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–µ—Ä–∞
    exit /b 1
)
echo [SUCCESS] SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...
ssh %SERVER_USER%@%SERVER_IP% "command -v docker"
if %errorlevel% neq 0 (
    echo [ERROR] Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    echo [INFO] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞
    exit /b 1
)

ssh %SERVER_USER%@%SERVER_IP% "command -v docker-compose"
if %errorlevel% neq 0 (
    echo [ERROR] docker-compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    echo [INFO] –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ docker-compose –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞
    exit /b 1
)
echo [SUCCESS] Docker –∏ docker-compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

REM –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo [INFO] –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...
ssh %SERVER_USER%@%SERVER_IP% "mkdir -p %PROJECT_DIR%"
echo [SUCCESS] –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è %PROJECT_DIR% —Å–æ–∑–¥–∞–Ω–∞

REM –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä
echo [INFO] –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä...
scp docker-compose.prod.yml %SERVER_USER%@%SERVER_IP%:%PROJECT_DIR%/
echo [SUCCESS] docker-compose.prod.yml —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω

if exist ".env" (
    scp .env %SERVER_USER%@%SERVER_IP%:%PROJECT_DIR%/
    echo [SUCCESS] .env —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω
) else (
    echo [WARNING] .env —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤—Ä—É—á–Ω—É—é
)

REM –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
echo [INFO] –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã...
ssh %SERVER_USER%@%SERVER_IP% "cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% down"
echo [SUCCESS] –°—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã

REM –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo [INFO] –û–±–Ω–æ–≤–ª—è–µ–º –æ–±—Ä–∞–∑—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...
ssh %SERVER_USER%@%SERVER_IP% "docker pull sergey17/backend:latest"
ssh %SERVER_USER%@%SERVER_IP% "docker pull sergey17/frontend:latest"
echo [SUCCESS] –û–±—Ä–∞–∑—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

REM –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
echo [INFO] –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ...
ssh %SERVER_USER%@%SERVER_IP% "cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% up -d"
if %errorlevel% neq 0 (
    echo [ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    exit /b 1
)
echo [SUCCESS] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...
timeout /t 10 /nobreak >nul

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
ssh %SERVER_USER%@%SERVER_IP% "cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% ps"

REM –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
echo [INFO] –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤...

curl -s -f http://%SERVER_IP%:8000/health >nul 2>&1
if %errorlevel% equ 0 (
    echo [SUCCESS] Backend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://%SERVER_IP%:8000
) else (
    echo [WARNING] Backend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://%SERVER_IP%:8000
)

curl -s -f http://%SERVER_IP%:5173 >nul 2>&1
if %errorlevel% equ 0 (
    echo [SUCCESS] Frontend –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://%SERVER_IP%:5173
) else (
    echo [WARNING] Frontend –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ http://%SERVER_IP%:5173
)

REM –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏
echo [INFO] –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ª–æ–≥–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 20 —Å—Ç—Ä–æ–∫)...
ssh %SERVER_USER%@%SERVER_IP% "cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% logs --tail=20"

echo.
echo [SUCCESS] üéâ –î–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!
echo.
echo [INFO] –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å–∞–º:
echo [INFO]   - Backend: http://%SERVER_IP%:8000
echo [INFO]   - Frontend: http://%SERVER_IP%:5173
echo.
echo [INFO] –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
echo [INFO]   ssh %SERVER_USER%@%SERVER_IP% 'cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% logs -f'
echo.
echo [INFO] –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:
echo [INFO]   ssh %SERVER_USER%@%SERVER_IP% 'cd %PROJECT_DIR% && docker-compose -f %DOCKER_COMPOSE_FILE% down'
echo.

endlocal
